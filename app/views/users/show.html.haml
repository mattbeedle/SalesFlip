.title
  %h2= @user.username || @user.email

  - if current_user.role == 'Administrator'
    = link_to "Log in as #{@user.name}", masquerade_administration_user_path, :class => "button", :method => :put

= image_tag @user.gravatar_url
%dl.profile
  %dt= t(:leads_created_accepted)
  %dd
    = @user.leads.count
    = '/'
    = Lead.assigned_to(@user.id).count
%dl.profile
  %dt= t(:contacts_created_accepted)
  %dd
    = @user.contacts.count
    = '/'
    = Contact.assigned_to(@user.id).count
%dl.profile
  %dt= t(:accounts_created_accepted)
  %dd
    = @user.accounts.count
    = '/'
    = Account.assigned_to(@user.id).count
%dl.profile
  %dt= t(:comments)
  %dd= @user.comments.count
%dl.profile
  %dt= t(:email_count)
  %dd= @user.emails.count
%dl.profile
  %dt= t(:tasks_created_completed_count)
  %dd
    = @user.tasks.count
    = '/'
    = @user.tasks.completed.count
    = '/'
    = @user.tasks.incomplete.count

%dl.profile
  - assigned_leads = Lead.assigned_to(@user.id).status_is_not(['Rejected', 'Not Interested'])
  - contacted_leads = Lead.assigned_to(@user.id).status_is('Infomail Sent')
  - converted_leads = Lead.assigned_to(@user.id).status_is('Converted')
  %dt= t(:pipeline)
  %dd
    %table
      %tr
        %th= t(:assigned_leads)
        %th= t(:contacted_leads)
        %th= t(:converted_leads)
        - Opportunity.stages.each do |stage|
          %th= stage
        %tr
          %td= link_to assigned_leads.count, leads_path(:assigned_to => current_user.id, :status_is_not => ['Rejected', 'Not Interested'])
          %td= link_to "#{contacted_leads.count} (#{number_to_percentage((contacted_leads.count.to_f / assigned_leads.count) * 100, :precision => 2)})", leads_path(:assigned_to => @user.id, :status_is => ['Infomail Sent'])
          %td= link_to "#{converted_leads.count} (#{number_to_percentage((converted_leads.count.to_f || 0.0 / contacted_leads.count) * 100, :precision => 2)})", leads_path(:assigned_to => @user.id, :status_is => ['Converted'])
          - Opportunity.stages.each do |stage|
            %td= link_to Opportunity.assigned_to(@user.id).stage_is(stage).count, opportunities_path(:assigned_to => @user.id, :stage_is => [stage])

- if can? :track_activity_for, @user
  - content_for :javascripts do
    %script(src="/javascripts/raphael-min.js")
    %script(src="/javascripts/g.raphael-min.js")
    %script(src="/javascripts/g.dot-min.js")

    - activities = Activity::Report.weekly(@user)
    - unless activities.blank?
      - hours = (6..23).to_a + (0..5).to_a
      :javascript
        $(document).onReady(function() {
          var r = Raphael("activity_chart");

          var xs = #{(0..23).to_a * activities.length};
          var ys = #{(1..(activities.length)).map { |i| [i]*24 }.flatten};
          var data = #{activities.values.map { |a| hours.map { |i| a[i] } }.flatten};
          var axisy = #{activities.keys};
          var axisx = #{hours.map(&:to_s).map { |hour| hour.rjust(2, "0")} };

          r.g.txtattr.font = "11px 'Fontin Sans', Fontin-Sans, sans-serif";

          r.g.dotchart(10, 10, 620, 260, xs, ys, data, {
            symbol: "o",
            max: 10,
            axis: "0 0 1 1",
            axisxstep: 23,
            axisystep: #{activities.length - 1},
            axisxlabels: axisx,
            axisxtype: " ",
            axisytype: " ",
            opacity: true,
            axisylabels: axisy
          })
            .hover(
              function () {
                if ( this.value > 0 ) {
                  this.tag = this.tag || r.g.tag(this.x, this.y, this.value, 0, this.r + 2).insertBefore(this);
                  this.tag.show();
                }
              }, function () {
                this.tag && this.tag.hide();
              }
            );
        });
  %dl.profile
    %dt Activity
    %dd
      #activity_chart
