.title
  %h2
    = @lead.full_name
    - if @lead.company.present?
      %small= " @ #{@lead.company}"
    = rating_for(@lead)
  - if I18n.in_locale(:en) { @lead.status_is?('Converted') }
    %span.status.converted
      %strong &#10004;
      = t(:converted)
  - if I18n.in_locale(:en) { @lead.status_is?('Rejected') }
    %span.status.rejected
      %strong &#10008;
      = t(:rejected)
  %ul.actions
    - if @lead.assignee_id.blank? && can?(:view_unassigned, Lead)
      %li
        = simple_form_for @lead, :url => lead_path(@lead) do |form|
          = form.select :assignee_id, [[t(:assign_to)+"...", nil]] + current_user.company.users.asc(:email).map {|u| [u.email, u.id]}
    - if can?(:update, @lead)
      %li
        = link_to t(:edit), edit_lead_path(@lead, :return_to => request.fullpath), :id => "edit_#{dom_id @lead}"
      - unless I18n.in_locale(:en) { @lead.status_is?('New') } || I18n.in_locale(:en) { @lead.status_is?('Converted') || @lead.status_is?('Rejected') }
        %li
          = simple_form_for @lead, :url => convert_lead_path(@lead), :html => { :method => :get } do |form|
            = form.button :submit, t(:convert), :id => "convert_lead"
        %li
          = simple_form_for @lead, :url => reject_lead_path(@lead) do |form|
            = form.button :submit, t(:reject), :id => 'reject_lead'
  %br/
  %small
    = raw t(:added_ago_by, :time => l(@lead.created_at, :format => :short), :by => @lead.user.username)
    = " : #{t(:assigned_to, :user => @lead.assignee.full_name) if @lead.assignee_id.present?}"
  - unless @lead.industry.blank?
    %br/
    %small= @lead.industry

- if @lead.notes.present?
  .notes= raw @lead.notes

= render :partial => 'tasks/add_task', :locals => { :object => @lead }

= render :partial => 'comments/comments', :locals => { :object => @lead, :comments => @lead.comments.desc(:created_at) }

- if %w(New Contacted).include?(@lead.status)
  #on_call.bottom_bar(style="display: none" data-id="#{@lead.id}")
    %p
      #{t(:on_the_phone_with, :lead => @lead.full_name)}.
      = link_to t(:done?), finish_lead_path

- content_for :sidebar do
  - if @lead.duplicate?
    #duplicate.box
      %h4= t(:lead_is_marked_as_duplicate)

  - if can? :view_contact_details, @lead
    .box.gold
      %h3= t(:contact_info)
      %dl.info
        - if campaign = @lead.campaign
          %dt= t('campaign')
          %dd= link_to campaign.name, campaign_path(campaign)
        = show_attribute(@lead, 'identifier')
        = show_attribute(@lead, 'company')
        = show_attribute(@lead, 'job_title')
        = show_attribute(@lead, 'department')
        = show_attribute(@lead, 'email', mail_to(@lead.email, nil, :bcc => current_user.dropbox_email))
        = show_attribute(@lead, 'alternative_email', mail_to(@lead.alternative_email, nil, :bcc => current_user.dropbox_email))
        - unless @lead.do_not_call
          = show_attribute(@lead, 'phone')
          = show_attribute(@lead, 'mobile')
        = show_attribute(@lead, 'address')
        = show_attribute(@lead, 'city')
        = show_attribute(@lead, 'postal_code')
        = show_attribute(@lead, 'referred_by')
        = show_attribute(@lead, 'website', link_to(t(:visit_website), @lead.website))
        = show_attribute(@lead, 'twitter', link_to('Twitter', @lead.website))
        = show_attribute(@lead, 'linked_in', link_to('LinkedIn', @lead.linked_in))
        = show_attribute(@lead, 'facebook', link_to('Facebook', @lead.facebook))
        = show_attribute(@lead, 'xing', link_to('Xing', @lead.xing))
        = show_attribute(@lead, 'referred_by')
      - if can? :update, @lead
        - if %w(New Contacted).include?(@lead.status)
          %hr
          %p
            = link_to t(:already_contacted?), finish_lead_path, :onclick => "CallBox.show(this.href); return false;"
        - elsif @lead.status == "Infomail Requested"
          %hr
          %p
            = link_to t(:sent_infomail?), lead_path(:lead => {:status => "Infomail Sent"}), :method => :put
  #recent_activity.box.ice
    %h3= t(:recent_activity_for, :name => @lead.full_name )
    = render :partial => 'shared/activity_for', :collection => @lead.related_activities.desc(:updated_at).limit(6), :as => :activity

  - unless @lead.duplicate?
    = render "mark_as_duplicate"

  :css
    #duplicate {
      background-color: #c55;
      color: #fff;
      margin-bottom: 20px;
      padding: 20px;
    }

    #duplicate h4 {
      margin: 0;
    }

    #mark_as_duplicate {
      color: #555;
      margin-top: 20px;
      padding: 10px;
    }

    #mark_as_duplicate h4 {
      margin: 0 0 5px;
    }

    #mark_as_duplicate p {
      margin: 0;
      text-align: left;
    }
