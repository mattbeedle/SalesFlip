#bar
  %ul#bulk.disabled
    %li
      Assignee
      %ul
        - @users.each do |assignee|
          %li= link_to assignee.name, assignee_administration_leads_path(:assignee_id => assignee.id)

    %li
      Campaign
      %ul
        - Campaign.each do |campaign|
          %li= link_to campaign.name, campaign_administration_leads_path(:campaign_id => campaign.id)

    %li
      Source
      %ul
        - t(:lead_sources, :locale => :en).each do |source|
          %li= link_to source, source_administration_leads_path(:source => source)

    %li
      Status
      %ul
        - t(:lead_statuses, :locale => :en).each do |status|
          %li= link_to status, status_administration_leads_path(:status => status)

    %li
      Rating
      %ul
        %li
          = link_to rating_administration_leads_path(:rating => 0), :class => :rating do
            %span.off &#9733;
            %span.off &#9733;
            %span.off &#9733;
            %span.off &#9733;
            %span.off &#9733;
        %li
          = link_to rating_administration_leads_path(:rating => 1), :class => :rating do
            %span.on &#9733;
            %span.off &#9733;
            %span.off &#9733;
            %span.off &#9733;
            %span.off &#9733;
        %li
          = link_to rating_administration_leads_path(:rating => 2), :class => :rating do
            %span.on &#9733;
            %span.on &#9733;
            %span.off &#9733;
            %span.off &#9733;
            %span.off &#9733;
        %li
          = link_to rating_administration_leads_path(:rating => 3), :class => :rating do
            %span.on &#9733;
            %span.on &#9733;
            %span.on &#9733;
            %span.off &#9733;
            %span.off &#9733;
        %li
          = link_to rating_administration_leads_path(:rating => 4), :class => :rating do
            %span.on &#9733;
            %span.on &#9733;
            %span.on &#9733;
            %span.on &#9733;
            %span.off &#9733;
        %li
          = link_to rating_administration_leads_path(:rating => 5), :class => :rating do
            %span.on &#9733;
            %span.on &#9733;
            %span.on &#9733;
            %span.on &#9733;
            %span.on &#9733;
  #search
    = form_tag nil, :method => :get do
      %input(type="search" name="terms" placeholder="Search..." value="#{params[:terms]}")

= form_tag nil, :method => :put, :id => "leads" do
  = hidden_field_tag 'sort[]', params[:sort][0]
  = hidden_field_tag 'sort[]', params[:sort][1]
  = hidden_field_tag 'terms', current_scopes[:terms]
  %table
    %thead
      %tr
        %th(width="70")
          .filter.left
            Status
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["status", "asc"] )
                = link_to "DESC", params.merge( :sort => ["status", "desc"] )
              %ul
                %li
                  = select_tag "status_is", options_for_select(t(:lead_statuses, :locale => :en), current_scopes[:status_is]), :include_blank => 'All'

        %th(style="width: 75px;")
          .filter
            Created
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["created_at", "asc"] )
                = link_to "DESC", params.merge( :sort => ["created_at", "desc"] )

        %th
          .filter
            Name
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["name", "asc"] )
                = link_to "DESC", params.merge( :sort => ["name", "desc"] )
        %th(width="20")
          .filter
            &#9733;
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "0-5", params.merge( :sort => ["rating", "asc"] )
                = link_to "5-0", params.merge( :sort => ["rating", "desc"] )
        %th
          .filter
            Company
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["company", "asc"] )
                = link_to "DESC", params.merge( :sort => ["company", "desc"] )
        %th(width="95")
          .filter
            Source
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["source", "asc"] )
                = link_to "DESC", params.merge( :sort => ["source", "desc"] )
              %ul
                %li
                  = select_tag "source_is",
                    options_for_select([["All", "All"], ["None", ""]], current_scopes[:source_is]) + grouped_options_for_select( [['---', t(:lead_sources, :locale => :en)]], current_scopes[:source_is] )
        %th
          .filter
            Assignee
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["assignee", "asc"] )
                = link_to "DESC", params.merge( :sort => ["assignee", "desc"] )
              %ul
                %li
                  = select_tag "assigned_to",
                    options_for_select([["All", "All"], ["Unassigned", ""]], current_scopes[:assigned_to]) + grouped_options_for_select( [['---', @users.map { |u| [u.email, u.id] }]], current_scopes[:assigned_to].to_i )
        %th
          .filter
            Campaign
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["campaign", "asc"] )
                = link_to "DESC", params.merge( :sort => ["campaign", "desc"] )
              %ul
                %li
                  = select_tag "in_campaign",
                    options_for_select([["All", "All"], ["None", ""]], current_scopes[:in_campaign]) + grouped_options_for_select( [['---', Campaign.all.asc(:name).map { |c| [c.name, c.id] }]], current_scopes[:in_campaign].to_i )
        %th
          .filter
            City
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["city", "asc"] )
                = link_to "DESC", params.merge( :sort => ["city", "desc"] )
        %th(width="30")
          .filter
            PLZ
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["postal_code", "asc"] )
                = link_to "DESC", params.merge( :sort => ["postal_code", "desc"] )
        %th
          .filter
            Size
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["company_size", "asc"] )
                = link_to "DESC", params.merge( :sort => ["company_size", "desc"] )
        %th(width="20")
          .filter
            &#9998;
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["comments", "asc"] )
                = link_to "DESC", params.merge( :sort => ["comments", "desc"] )
        %th(style="width: 75px;")
          .filter.right
            Next Task
            .arrow.arrow-border
            .arrow
            .menu
              .sort
                Sort:
                = link_to "ASC", params.merge( :sort => ["tasks", "asc"] )
                = link_to "DESC", params.merge( :sort => ["tasks", "desc"] )
        %th(style="width: 8px;")
    %tbody
      - @leads.each do |lead|
        %tr
          %td(align="center" style="display: none;")
            = check_box_tag 'leads[]', lead.id
          %td= lead.status
          %td= l lead.created_at.to_date
          %td= lead.full_name
          %td(align="center")= lead.rating
          %td.company
            .elide{:title => lead.company}
              = lead.company
          %td= lead.source
          %td= lead.assignee.try(:name)
          %td= lead.campaign.try(:name)
          %td= lead.city
          %td(align="center")= lead.postal_code
          %td(align="center")= lead.company_size
          %td(align="center")= lead.comments.count
          %td
            - if task = lead.tasks.first(:completed_at => nil, :order => :due_at.asc)
              = l task.due_at.to_date
          %td
            = link_to image_tag("external-link.png"), lead_path(lead), :target => :blank

= will_paginate @leads, :inner_window => 10

= content_for :stylesheets do
  :css
    body {
      padding-top: 60px;
    }

    tbody tr:hover {
      cursor: pointer;
      cursor: hand;
    }

    th a {
      color: #555;
      display: block;
      padding: 2px 5px;
      text-decoration: none;
    }

    .company {
      width: 180px;
    }

    .elide {
      text-overflow:ellipsis;
      overflow:hidden;
      white-space:nowrap;
      width: inherit;
    }

    tbody tr.selected {
      background-color: #ffc;
    }

    tbody tr.selected td {
      border-color: #eeb;
    }

    .rating {
      font-size: 13px;
      padding-top: 4px;
      text-decoration: none;
    }

    .rating span.on {
      color: #666666;
    }

    .rating span.off {
      color: #cccccc;
    }

    #bar {
      background-color: #555;
      border-bottom: 4px solid #333;
      height: 24px;
      left: 0;
      padding: 10px 0;
      position: fixed;
      top: 0;
      width: 100%;
      z-index: 1;
    }

    #search {
      float: right;
      margin-right: 10px;
    }

    #search input:focus {
      width: 200px;
    }

    #bulk {
      float: left;
      list-style: none;
      margin: 0;
      margin-left: 10px;
      padding: 0;
    }

    #bulk > li {
      -webkit-border-radius: 4px;
      -moz-border-radius: 4px;
      border-radius: 4px;
      background-color: #333;
      color: #fff;
      display: inline-block;
      font-weight: bold;
      padding: 4px 8px;
      position: relative;
      text-align: center;
    }

    #bulk.disabled li {
      background-color: #444;
      color: #999;
    }

    #bulk:not(.disabled) > li:hover ul {
      display: block;
    }

    #bulk ul {
      -webkit-box-shadow: #7E7D7D 0px 5px 5px 0px;
      -moz-box-shadow: #7E7D7D 0px 5px 5px 0px;
      box-shadow: #7E7D7D 0px 5px 5px 0px;
      background-color: #fff;
      display: none;
      list-style: none;
      margin: 0;
      max-height: 180px;
      overflow: auto;
      padding: 4px;
      position: absolute;
      text-align: left;
      width: 160px;
      z-index: 2;
    }

    .filter {
      display: inline-block;
      position: relative;
    }

    .sort {
      font-size: 0.9em;
      text-align: center;
      text-transform: uppercase;
    }

    .menu {
      -webkit-border-radius: 10px;
      -moz-border-radius: 10px;
      border-radius: 10px;
      -webkit-box-shadow: #7E7D7D 0 0 10px;
      -moz-box-shadow: #7E7D7D 0 0 10px;
      box-shadow: #7E7D7D 0 0 10px;
      top: 20px;
      background-color: #fff;
      color: #000;
      left: 50%;
      list-style: none;
      margin: 0;
      margin-left: -80px;
      max-height: 220px;
      overflow: auto;
      padding: 10px;
      position: absolute;
      text-align: left;
      width: 160px;
      z-index: 2;
      border: 2px solid #000;
    }

    .menu select {
      width: 160px;
    }

    th .arrow,
    th .arrow-border,
    th .menu {
      display: none;
    }

    th:hover .arrow,
    th:hover .arrow-border,
    th:hover .menu {
      display: block;
    }

    .menu a {
      color: #55A;
      display: inline;
      padding: 4px;
    }

    .menu a:hover {
      -webkit-border-radius: 4px;
      -moz-border-radius: 4px;
      border-radius: 4px;
      background-color: #55A;
      color: #fff;
    }

    .arrow {
      border-color: transparent transparent #fff transparent;
      border-style: solid;
      border-width: 6px;
      height:0;
      left: 50%;
      margin-left: -5px;
      width:0;
      position:absolute;
      z-index: 3;
      top: 11px;
    }

    .arrow-border {
      border-color: transparent transparent #000 transparent;
      top: 8px;
    }

    .left .menu {
      left: -14px;
      margin: 0;
    }

    .right .menu {
      left: auto;
      right: -14px;
      margin: 0;
    }

    .menu ul {
      list-style: none;
      margin: 0;
      padding: 0;
    }

    #bulk ul li {
      border-bottom: 1px solid #eee;
    }

    #bulk ul a {
      color: #000;
      display: block;
      padding: 4px;
    }

    #bulk ul a:hover {
      background-color: #ffe;
    }

    .pagination {
      margin: 20px 0;
      text-align: center;
    }

    .pagination a,
    .pagination span {
      margin: 0 5px;
    }

:javascript
  var last_selected_row;

  $$("tbody tr").each('delegate', 'mousedown', 'td, div', function(e) {
    var row = this.parent("tr");

    if ( e._.shiftKey && last_selected_row ) {
      e.preventDefault();

      var rows = $$("tbody tr");
      var range = [rows.indexOf(last_selected_row), rows.indexOf(row)].sort();

      rows.slice(range[0], range[1]+1).each(function(el) {
        var checkbox = el.first("input");

        checkbox.checked(true).fire('change');
      });

    }
    else {
      var checkbox = row.first("input");

      checkbox.checked(!checkbox.checked()).fire('change');
    }

    last_selected_row = row;
  });

  "tbody input".on('change', function() {
    if ( $$("input:checked").length > 0 )
      $("bulk").removeClass("disabled");
    else
      $("bulk").addClass("disabled");

    if ( this.checked() )
      this.parent("tr").addClass("selected");
    else
      this.parent("tr").removeClass("selected");
  });

  $$("#bulk a").each('on', 'click', function(e) {
    var form = $("leads");
    form.set('action', this.get('href'));
    form.submit();
    return false;
  });

  $$(".filter select").each('on', 'change', function(e) {
    var form = $("leads");
    form.set('method', 'get');
    form.submit();
  });
